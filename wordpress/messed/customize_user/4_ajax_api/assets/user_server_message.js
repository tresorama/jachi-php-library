const USER_SERVER_MESSAGE = (function () {
  /* =================================================== 
        GET LANGUAGE BY HTML lang attribute
  =================================================== */
  const locale = (function () {
    const lang = document.querySelector("html").getAttribute("lang");
    switch (lang) {
      case "it-IT":
        return "it";
      default:
        return "en";
    }
  })();

  /* =================================================== 
        VALIDATION SETUP
  =================================================== */

  const BACKEND_ERROR_MAP = {
    message: {
      incorrect_password: {
        it: "Password non corretta. Riprova.",
        en: "Password incorrect. Retry.",
      },
    },
  };

  const backendErrorsCustomMessage = function (errors) {
    let newErrors = [];

    for (const errorType in errors) {
      if (errors.hasOwnProperty(errorType)) {
        const htmlLaido = errors[errorType][0]; // html of the error generated by wordpress

        const M = BACKEND_ERROR_MAP; // MY DICTIONARY
        const l = locale; // html lang attribute

        // get message
        let frase = M.message[errorType] ? M.message[errorType][l] : null;
        frase = frase ? frase : errorType;

        newErrors.push({ type: errorType, message: frase, htmlLaido: htmlLaido });
      }
    }

    return newErrors;
  };

  /* =================================================== 
      EXPORT
=================================================== */
  return {
    translate: backendErrorsCustomMessage,
  };
})();
